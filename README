Report bugs, request features, send patches:
  http://github.com/skypher/paktahn/issues

Follow the source code at:
  http://github.com/skypher/paktahn

Contribute to the Wiki:
  http://wiki.github.com/skypher/paktahn

Paktahn is designed to be a successor to the popular Yaourt
package manager.

It's a Pacman wrapper that also knows how to search and install
packages from AUR.

Current advantages over Yaourt:

  * allows use of alternative Pacman binaries (e.g. Powerpill)

  * caches local dbs for exceptional speed (soon for AUR too!)

  * way better security and extensibility


Usage hints
===========

== Shortcut: pak

Paktahn comes with a symlink called "pak".
Running pak without any arguments will list CLI options for paktahn.


== Interactive search/install mode

  pak SEARCH

will search all dbs from pacman.conf (excluding local)
and AUR for SEARCH in the name and description of packages.


== Install and remove package or packages

  pak -S PKG(s), pak -R PKG(s)

will find and install or remove PKG(s) from sync dbs or AUR.


== Upgrade AUR packages

  pak -Su --aur

will upgrade all installed AUR packages.

== Retrieve a PKGBUILD for AUR or binary packages

  pak -G emacs, pak -G emacs-clojure-mode-git, etc

will pull the PKGBUILD from SVN for binary packages and
retrieve it from AUR otherwise.


Common config file settings
===========================

== Use Powerpill/Clyde/etc instead of Pacman

In your ~/.paktahn/config.lisp:

  (in-package :pak)
  (setf *pacman-binary* "powerpill")

This assumes that powerpill is in your $PATH.


== Set a different color scheme

In your ~/.paktahn/config.lisp:

  (in-package :pak)
  (setf *color-scheme* *color-scheme-lightbg*)

Available color schemes are *color-scheme-darkbg* (the default)
and *color-scheme-lightbg*.


== Use unipkg instead of makepkg

   (in-package :pak)
   (setf *makepkg-binary* "unipkg")


== Storing built packages

  (in-package :pak)
  (setf *save-packages* "/tmp/mypackages/") ; mind the trailing slash

Just store packages, don't install them:

  (in-package :pak)
  (setf *save-packages* "/tmp/mypackages/") ; mind the trailing slash
  (setf *save-packages-only* t)


How do I build this thing?!
===========================
See PKGBUILD.

